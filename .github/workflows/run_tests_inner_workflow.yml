name: Lint and Unit Test

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      shell:
        required: true
        type: string
      label:
        required: true
        type: string
      path:
        required: true
        type: string

env:
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  GCS_UPLOAD_PREFIX: fake
  TEST_OPENSEARCH_DASHBOARDS_HOST: localhost
  TEST_OPENSEARCH_DASHBOARDS_PORT: 6610
  TEST_OPENSEARCH_TRANSPORT_PORT: 9403
  TEST_OPENSEARCH_PORT: 9400
  OSD_SNAPSHOT_SKIP_VERIFY_CHECKSUM: true

jobs:
  unit-tests:
    runs-on: ${{ inputs.os }}
    name: Unit tests on ${{ inputs.label }}
    defaults:
      run:
        shell: ${{ inputs.shell }}
    steps:
      - name: Setup JDK
        if: runner.os == 'Windows'
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore workflow cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ inputs.path }}
          key: osd-${{ runner.os }}-${{ github.run_id }}

      - name: Validate workflow cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10
          yarn config set network-timeout 1000000 -g

      - name: Run linter
        id: linter
        run: yarn lint

      - name: Run unit tests with coverage
        id: unit-tests
        run: yarn test:jest:ci:coverage

      - name: Run Mocha tests with coverage
        id: mocha-tests
        run: yarn test:mocha:coverage

      - name: Report code coverage
        id: upload-code-coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./target/opensearch-dashboards-coverage
          flags: ${{ runner.os }}

      - name: Run integration tests
        id: integration-tests
        run: yarn test:jest_integration:ci

  functional-tests:
    runs-on: ${{ inputs.os }}
    name: Functional tests for group ${{ matrix.group }} on ${{ inputs.label }}
    defaults:
      run:
        shell: ${{ inputs.shell }}
    strategy:
      matrix:
        group: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 ]
    steps:
      - name: Setup JDK
        if: runner.os == 'Windows'
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore workflow cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ inputs.path }}
          key: osd-${{ runner.os }}-${{ github.run_id }}

      - name: Validate workflow cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10
          yarn config set network-timeout 1000000 -g

      - name: Run test group ${{ matrix.group }}
        id: ftr-tests
        run: node scripts/functional_tests.js --config test/functional/config.js --include ciGroup${{ matrix.group }}
        env:
          CI_GROUP: ciGroup${{ matrix.group }}
          CI_PARALLEL_PROCESS_NUMBER: ciGroup${{ matrix.group }}
          JOB: ci${{ matrix.group }}
          CACHE_DIR: ciGroup${{ matrix.group }}

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: failure-artifacts-ci${{ matrix.group }}
          path: |
            test/*/failure_debug/
            test/*/screenshots/

