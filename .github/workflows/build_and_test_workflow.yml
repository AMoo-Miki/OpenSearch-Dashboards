# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Build and test

# trigger on every commit push and PR for all branches except pushes for backport branches
on:
  push:
    branches: [ '**', '!backport/**' ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'
  pull_request:
    branches: [ '**' ]
    paths-ignore:
      - '**/*.md'
      - 'docs/**'

env:
  TEST_BROWSER_HEADLESS: 1
  CI: 1
  GCS_UPLOAD_PREFIX: fake
  TEST_OPENSEARCH_DASHBOARDS_HOST: localhost
  TEST_OPENSEARCH_DASHBOARDS_PORT: 6610
  TEST_OPENSEARCH_TRANSPORT_PORT: 9403
  TEST_OPENSEARCH_PORT: 9400
  OSD_SNAPSHOT_SKIP_VERIFY_CHECKSUM: true

jobs:
  checkout-and-prime:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            shell: bash
            label: Linux
          - os: windows-latest
            shell: powershell
            label: Windows
    runs-on: ${{ matrix.os }}
    name: Build on ${{ matrix.label }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - name: Configure Git
        run: |
          git config --global core.autocrlf false

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK
        if: runner.os == 'Windows'
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10
          yarn config set network-timeout 1000000 -g

      - name: Configure parameters for Windows
        if: runner.os == 'Windows'
        run: echo "YARN_CACHE_LOCATION=$(yarn cache dir)" >> $env:GITHUB_ENV

      - name: Configure parameters for non-Windows
        if: runner.os != 'Windows'
        run: echo "YARN_CACHE_LOCATION=$(yarn cache dir)" >> $GITHUB_ENV

      - name: Initialize Yarn cache
        uses: actions/cache@v3
        with:
          path: ${{ env.YARN_CACHE_LOCATION }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Setup ChromeDriver
        run: node scripts/upgrade_chromedriver.js

      - name: Run bootstrap
        if: runner.os == 'Windows'
        run: |
          yarn osd bootstrap
          if ($LASTEXITCODE) { yarn osd bootstrap }

      - name: Run bootstrap
        if: runner.os != 'Windows'
        run: yarn osd bootstrap || yarn osd bootstrap

      - name: Build plugins
        run: node scripts/build_opensearch_dashboards_platform_plugins --no-examples --workers 10

      - name: Save workflow cache
        uses: actions/cache/save@v3
        with:
          path: ${{ github.workspace }}
          key: osd-${{ runner.os }}-${{ github.run_id }}

  unit-tests:
    needs: checkout-and-prime
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            shell: bash
            label: Linux
          - os: windows-latest
            shell: powershell
            label: Windows
    runs-on: ${{ matrix.os }}
    name: Unit tests on ${{ matrix.label }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - name: Setup JDK
        if: runner.os == 'Windows'
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore workflow cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ github.workspace }}
          key: osd-${{ runner.os }}-${{ github.run_id }}

      - name: Validate workflow cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10
          yarn config set network-timeout 1000000 -g

      - name: Run linter
        id: linter
        run: yarn lint

      - name: Run unit tests with coverage
        id: unit-tests
        run: yarn test:jest:ci:coverage

      - name: Run Mocha tests with coverage
        id: mocha-tests
        run: yarn test:mocha:coverage

      - name: Report code coverage
        id: upload-code-coverage
        uses: codecov/codecov-action@v3
        with:
          directory: ./target/opensearch-dashboards-coverage
          flags: ${{ runner.os }}

      - name: Run integration tests
        id: integration-tests
        run: yarn test:jest_integration:ci

  functional-tests:
    needs: checkout-and-prime
    strategy:
      matrix:
        group: [ 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 ]
        include:
          - os: ubuntu-latest
            shell: bash
            label: Linux
          - os: windows-latest
            shell: powershell
            label: Windows
    runs-on: ${{ matrix.os }}
    name: Functional tests in group ${{ matrix.group }} on ${{ matrix.label }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    steps:
      - name: Setup JDK
        if: runner.os == 'Windows'
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Restore workflow cache
        id: cache
        uses: actions/cache/restore@v3
        with:
          path: ${{ github.workspace }}
          key: osd-${{ runner.os }}-${{ github.run_id }}

      - name: Validate workflow cache
        if: steps.cache.outputs.cache-hit != 'true'
        run: exit 1

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup Yarn
        run: |
          npm uninstall -g yarn
          npm i -g yarn@1.22.10
          yarn config set network-timeout 1000000 -g

      - name: Run test group ${{ matrix.group }}
        id: ftr-tests
        run: node scripts/functional_tests.js --config test/functional/config.js --include ciGroup${{ matrix.group }}
        env:
          CI_GROUP: ciGroup${{ matrix.group }}
          CI_PARALLEL_PROCESS_NUMBER: ciGroup${{ matrix.group }}
          JOB: ci${{ matrix.group }}
          CACHE_DIR: ciGroup${{ matrix.group }}

      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: failure-artifacts-ci${{ matrix.group }}
          path: |
            test/*/failure_debug/
            test/*/screenshots/

  build-min-artifact:
    needs: checkout-and-prime
    strategy:
      matrix:
        include:
          - name: Linux x64
            ext: tar.gz
            suffix: linux-x64
            script: build-platform --linux --skip-os-packages
            os: ubuntu-latest
            shell: bash
          - name: Linux ARM64
            ext: tar.gz
            suffix: linux-arm64
            script: build-platform --linux-arm --skip-os-packages
            os: ubuntu-latest
            shell: bash
          - name: Windows x64
            ext: zip
            suffix: windows-x64
            script: build-platform --windows --skip-os-packages
            os: windows-latest
            shell: powershell
    uses: ./.github/workflows/release-artifacts.yml
    with:
      name: ${{ matrix.name }}
      ext: ${{ matrix.ext }}
      suffix: ${{ matrix.suffix }}
      script: ${{ matrix.script }}
      os: ${{ matrix.os }}
      shell: ${{ matrix.shell }}
